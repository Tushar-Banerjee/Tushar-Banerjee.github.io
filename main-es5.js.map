{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/animal-component/animal-component.component.html","src/app/animal-component/animal-component.component.ts","src/app/app-routing.module.ts","src/app/app.component.html","src/app/app.component.ts","src/app/app.module.ts","src/app/bird-component/bird-component.component.html","src/app/bird-component/bird-component.component.ts","src/app/home-component/home-component.component.html","src/app/home-component/home-component.component.ts","src/app/insect-component/insect-component.component.html","src/app/insect-component/insect-component.component.ts","src/app/plant-component/plant-component.component.html","src/app/plant-component/plant-component.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div class=\"container\">\n    <div class=\"jumbotron\">\n        <h3>The Animals</h3>\n    </div>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <img src=\"../../assets/img/pic3.jpg\" class=\"img-thumbnail\" style=\"width:70%;height:50%\">\n        </div>\n        <div class=\"col-sm-8\">\n            <p>\n                    The koala (Phascolarctos cinereus, or, inaccurately, koala bear[a]) is an arboreal herbivorous \n                    marsupial native to Australia. It is the only extant representative of the family Phascolarctidae\n                     and its closest living relatives are the wombats, which comprise the family Vombatidae. The koala\n                      is found in coastal areas of the mainland's eastern and southern regions, inhabiting Queensland,\n                      New South Wales, Victoria, and South Australia. It is easily recognisable by its stout, tailless \n                      ody and large head with round, fluffy ears and large, spoon-shaped nose.\n                       The koala has a body length of 60–85 cm (24–33 in) and weighs 4–15 kg (9–33 lb).\n                        Pelage colour ranges from silver grey to chocolate brown. Koalas from the northern populations\n                         are typically smaller and lighter in colour than their counterparts further south. \n                         These populations possibly are separate subspecies, but this is disputed.\n\n            </p>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-animal-component',\n  templateUrl: './animal-component.component.html',\n  styleUrls: ['./animal-component.component.css']\n})\nexport class AnimalComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container\">\r\n<nav class=\"navbar navbar-default\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n                <div class=\"navbar-brand\">\r\n                Animal Planet\r\n            </div>\r\n        </div>\r\n        <ul class=\"nav navbar-nav\">\r\n            <li><a routerLink=\"/\">Home</a></li>\r\n            <li><a routerLink=\"/animal\">Animals</a></li>\r\n            <li><a routerLink=\"/insect\">Insects</a></li>\r\n            <li><a routerLink=\"/bird\">Birds</a></li>\r\n            <li><a routerLink=\"/plant\">Plants</a></li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n<div class=\"footer\">\r\n    Copyright Animal Planet@2019\r\n</div>\r\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n \n\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AnimalComponentComponent } from './animal-component/animal-component.component';\nimport { InsectComponentComponent } from './insect-component/insect-component.component';\nimport { BirdComponentComponent } from './bird-component/bird-component.component';\nimport { PlantComponentComponent } from './plant-component/plant-component.component';\nimport { Routes,RouterModule} from '@angular/router';\nimport { HomeComponentComponent } from './home-component/home-component.component';\n\nconst appRoutes: Routes=[\n  {path:'animal',component:AnimalComponentComponent},\n  {path:'bird',component:BirdComponentComponent},\n  {path:'insect',component:InsectComponentComponent},\n  {path:'plant',component:PlantComponentComponent},\n  {path:'',component:HomeComponentComponent},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AnimalComponentComponent,\n    InsectComponentComponent,\n    BirdComponentComponent,\n    PlantComponentComponent,\n    HomeComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n\n\n}","<div class=\"container\">\n        <div class=\"jumbotron\">\n            <h3>The Birds</h3>\n        </div>\n        <hr>\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <img src=\"../../assets/img/pic41.jpg\" class=\"img-thumbnail\">\n            </div>\n            <div class=\"col-sm-8\">\n                <p>\n                        The Hermit Thrush generally puts in an appearance in the Adirondack region by late April. The Hermit Thrush is a short-distance migrant. It winters in the southern US, rarely crossing the Gulf of Mexico. In eastern and central North America, males begin migrating north in March, arriving in our part of the Adirondack Mountains in late April. The Hermit Thrush breeds in a wide range of forest types, including coniferous, deciduous, and mixed forest. It is commonly seen in the forest under-story along virtually all the trails covered here. This thrush is even more commonly heard, singing its haunting, evocative song.\n                </p>\n            </div>\n        </div>\n    </div>\n    ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bird-component',\n  templateUrl: './bird-component.component.html',\n  styleUrls: ['./bird-component.component.css']\n})\nexport class BirdComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"jumbotron\">\n        <h2>Welcome to Animal Planet</h2>\n    </div>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <img class=\"img-thumbnail\" src=\"../../assets/img/pic1.jpeg\" style=\"width:60%;height:60%;\">\n        </div>\n        <div class=\"col-sm-6\">\n            <h3>The Royal Bengal Tiger</h3>\n        </div>\n    </div>\n    <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <h3>The Chameleon</h3>\n            </div>\n            <div class=\"col-sm-6\">\n                    <img class=\"img-thumbnail\" src=\"../../assets/img/pic2.jpg\" style=\"width:60%;height:60%\">\n                </div>\n        </div>\n\n        <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <img class=\"img-thumbnail\" src=\"../../assets/img/pic5.jpg\" style=\"width:60%;height:70%;\">\n                </div>\n                <div class=\"col-sm-6\">\n                  <h3>The Butterfly</h3>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <h3>The Banyan Tree</h3>\n                    </div>\n                    <div class=\"col-sm-6\">\n                            <img class=\"img-thumbnail\" src=\"../../assets/img/pic 6.jpg\" style=\"width:60%;height:60%\">\n                        </div>\n                </div>\n        \n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-component',\n  templateUrl: './home-component.component.html',\n  styleUrls: ['./home-component.component.css']\n})\nexport class HomeComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n        <div class=\"jumbotron\">\n            <h3>The Insects</h3>\n        </div>\n        <hr>\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <img src=\"../../assets/img/pic7.jpg\" class=\"img-thumbnail\">\n            </div>\n            <div class=\"col-sm-8\">\n                <p>\n                        Grasshoppers are a group of insects belonging to the suborder Caelifera. They are among what is probably the most ancient living group of chewing herbivorous insects, dating back to the early Triassic around 250 million years ago.\n\n                        Grasshoppers are typically ground-dwelling insects with powerful hind legs which allow them to escape from threats by leaping vigorously. As hemimetabolous insects, they do not undergo complete metamorphosis; they hatch from an egg into a nymph or \"hopper\" which undergoes five moults, becoming more similar to the adult insect at each developmental stage. At high population densities and under certain environmental conditions, some grasshopper species can change color and behavior and form swarms. Under these circumstances, they are known as locusts.\n                </p>\n            </div>\n        </div>\n    </div>\n    ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-insect-component',\n  templateUrl: './insect-component.component.html',\n  styleUrls: ['./insect-component.component.css']\n})\nexport class InsectComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n        <div class=\"jumbotron\">\n            <h3>The Plants</h3>\n        </div>\n        <hr>\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <img src=\"../../assets/img/pic61.jpeg\" class=\"img-thumbnail\">\n            </div>\n            <div class=\"col-sm-8\">\n                <p>\n                        The three redwood subfamily genera are Sequoia and Sequoiadendron of California and Oregon, United States; and Metasequoia in China. The redwood species contains the largest and tallest trees in the world. These trees can live for thousands of years. This is an endangered subfamily due to habitat losses from fire ecology suppression, logging, and air pollution.[citation needed] Other threats to its existence include: climate change, illegal marijuana cultivation, and burl poaching\n                </p>\n            </div>\n        </div>\n    </div>\n    ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plant-component',\n  templateUrl: './plant-component.component.html',\n  styleUrls: ['./plant-component.component.css']\n})\nexport class PlantComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}